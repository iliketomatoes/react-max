{"version":3,"sources":["webpack:///./src/index.tsx","webpack:///./src/components/BarChart/index.tsx","webpack:///./src/components/App/style.css?5f98","webpack:///./src/router.tsx","webpack:///./src/components/App/index.tsx","webpack:///./src/components/App/style.css","webpack:///./src/pages/Members.tsx","webpack:///./src/registerServiceWorker.ts","webpack:///./src/pages/About.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react_dom__WEBPACK_IMPORTED_MODULE_1__","_router__WEBPACK_IMPORTED_MODULE_2__","_registerServiceWorker__WEBPACK_IMPORTED_MODULE_3__","Object","document","getElementById","BarChart","_super","__extends","prototype","render","className","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","AppRouter","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","component","_components_App__WEBPACK_IMPORTED_MODULE_5__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","exact","path","_pages__WEBPACK_IMPORTED_MODULE_6__","_pages__WEBPACK_IMPORTED_MODULE_7__","react_hot_loader__WEBPACK_IMPORTED_MODULE_4__","App","_style_css__WEBPACK_IMPORTED_MODULE_1___default","a","AppIntro","_BarChart__WEBPACK_IMPORTED_MODULE_2__","push","MembersPage","isLocalhost","Boolean","window","location","hostname","match","register","navigator","URL","process","env","PUBLIC_URL","toString","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","fetch","response","status","headers","get","indexOf","unregister","reload","About"],"mappings":"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","file":"main.7cd32ae253dc338a837d.chunk.js","sourcesContent":["import * as React from 'react';\nimport { render } from 'react-dom';\nimport AppRouter from './router';\nimport registerServiceWorker from './registerServiceWorker';\n\n// Render the app\nrender(\n  <AppRouter />,\n  document.getElementById('root') as HTMLElement\n);\n\n// Register the service worker\nregisterServiceWorker();\n","import * as React from 'react';\n\nclass BarChart extends React.Component {\n  public render() {\n    return (\n      <div className='App'>\n       <span>Ciao, I'm a bar chart very basic! dang</span>\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--6-1!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--6-1!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--6-1!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import * as React from 'react';\nimport { Route, HashRouter, Switch } from 'react-router-dom';\nimport { hot } from 'react-hot-loader';\nimport App from './components/App';\nimport { About, MembersPage } from './pages';\n\nclass AppRouter extends React.Component {\n  public render() {\n    return (\n      <HashRouter>\n        <div className='container-fluid'>\n          <Route component={App} />\n          <Switch>\n            <Route exact path='/' component={About} />\n            <Route path='/about' component={About} />\n            <Route path='/members' component={MembersPage} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default hot(module)(AppRouter);\n","import * as React from 'react';\nimport style from './style.css';\nimport BarChart from '../BarChart';\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <h1 className='App-title'>Welcome to React, Beyond.</h1>\n        </header>\n        <p className={style.AppIntro}>\n          To get started, edit <code>src/App/index.tsx</code> and save to reload.\n        </p>\n        <BarChart />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".style_AppIntro_-pzwk9rFODOwjd4GvyjOd {\\n  color: #2a33b8;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"AppIntro\": \"style_AppIntro_-pzwk9rFODOwjd4GvyjOd\"\n};","import * as React from 'react';\n\nexport class MembersPage extends React.Component {\n  public render() {\n    return (\n      <div className='row'>\n        <h2> Members page ciao cribbio.</h2>\n      </div>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n\n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(\n        process.env.PUBLIC_URL!,\n        window.location.toString()\n      );\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n\n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n\n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n\n  function registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker) {\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a 'New content is\n                  // available; please refresh.' message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // 'Content is cached for offline use.' message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          }\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n\n  function checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type')!.indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n\n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n","import * as React from 'react';\n\nexport class About extends React.Component {\n  public render() {\n    return (\n      <div className='row'>\n        <h2> About page bella.</h2>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}